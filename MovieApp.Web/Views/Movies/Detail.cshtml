@using MovieApp.Infrastructure.Models.MovieDb.Movies
@using Microsoft.AspNetCore.Http
@model MovieDetailResponseModel;

<div class="container mt-5">
    <div class="row">
        <div class="col-md-6 d-flex">
            <div class="card">
                <div class="card-body p-4">
                    <h5 class="card-title">Orjinal Adı: @Model.data.original_title </h5>
                    <h5 class="card-title">@Model.data.title </h5>
                    <div class="w-100 mt-3"></div>
                    <p class="card-text"><img src="@(string.Concat("https://image.tmdb.org/t/p/original", Model.data.backdrop_path))" class="img-fluid" alt="@Model.data.original_title" style="max-width: 300px; height: auto;" /></p>

                    <p class="card-text">Süre: @Model.data.runtime dakika</p>
                    <p class="card-text">Bütçe: $@Model.data.budget</p>
                    <p class="card-text">Hasılat: $@Model.data.revenue</p>
                    <p class="card-text">Orjinal Dil: @string.Join(", ", @Model.data.spoken_languages.Select(g => g.name))</p>
                    <p class="card-text">Genel Bakış: @Model.data.overview</p>
                    <p class="card-text">Tür: @string.Join(", ", Model.data.genres.Select(g => g.name))</p>
                    <p class="card-text">Yapım Şirketleri: @string.Join(", ", @Model.data.production_companies.Select(g => g.name))</p>
                    <p class="card-text mb-0">Yapım Ülkeleri: @string.Join(", ", @Model.data.production_countries.Select(g => g.name))</p>
                </div>
            </div>
        </div>
        <div class="col-md-4 d-flex">
            <div class="card h-100 w-100">
                <div class="card-body p-4">
                    <h5 class="card-title">Poster</h5>
                    <img src="@(string.Concat("https://image.tmdb.org/t/p/original", Model.data.poster_path))" 
                         class="img-fluid" alt="@Model.data.original_title" 
                         style="width: 100%; height: auto;" />
                </div>
            </div>
        </div>
    </div>
    <br />
    @await Html.PartialAsync("_CommentsPartial", Model.comments)
</div>


@section Scripts {
    <script>
        $(document).ready(function () {
            $("#comment-form").on('submit', function (e) {
                e.preventDefault();

                var commentData = {
                    comment: $("#commentArea").val(),
                }

                $.ajax({
                    url: '/movies/@Model.data.id/comment',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(commentData),
                    success: function (response) {
                        window.location.reload()
                    },
                    error: function (xhr) {
                        console.log("error");
                    }
                });
            });

            $('.delete-comment').click(function() {
                const commentId = $(this).data('comment-id');
                const button = $(this);
                
                if (confirm('Bu yorumu silmek istediğinize emin misiniz?')) {
                    $.ajax({
                        url: `/movies/@Model.data.id/comment/${commentId}`,
                        type: 'DELETE',
                        headers: {
                            'Authorization': 'Bearer @Context.Session.GetString("jwt")'
                        },
                        success: function() {
                            button.closest('.col-12').fadeOut(400, function() {
                                $(this).remove();
                            });
                        },
                        error: function(xhr) {
                            if (xhr.status === 401) {
                                alert('Bu yorumu silme yetkiniz yok.');
                            } else if (xhr.status === 404) {
                                alert('Yorum bulunamadı. Silinmiş olabilir.');
                                button.closest('.col-12').fadeOut(400, function() {
                                    $(this).remove();
                                });
                            } else {
                                alert('Yorum silinemedi. Lütfen tekrar deneyin.');
                            }
                        }
                    });
                }
            });

            $('.edit-comment').click(function() {
                const commentContainer = $(this).closest('.col-12');
                const commentText = commentContainer.find('.comment-text');
                const editTextarea = commentContainer.find('.edit-comment-text');
                
                commentText.hide();
                editTextarea.show();
                $(this).hide();
                commentContainer.find('.delete-comment').hide();
                commentContainer.find('.save-comment, .cancel-edit').show();
            });

            $('.cancel-edit').click(function() {
                const commentContainer = $(this).closest('.col-12');
                const commentText = commentContainer.find('.comment-text');
                const editTextarea = commentContainer.find('.edit-comment-text');
                
                editTextarea.hide();
                commentText.show();
                commentContainer.find('.edit-comment, .delete-comment').show();
                commentContainer.find('.save-comment, .cancel-edit').hide();
                
                editTextarea.val(commentText.text());
            });

            $('.save-comment').click(function() {
                const commentId = $(this).data('comment-id');
                const commentContainer = $(this).closest('.col-12');
                const commentText = commentContainer.find('.comment-text');
                const editTextarea = commentContainer.find('.edit-comment-text');
                const newText = editTextarea.val();

                $.ajax({
                    url: `/movies/@Model.data.id/comment/${commentId}`,
                    type: 'PUT',
                    contentType: 'application/json',
                    data: JSON.stringify({ comment: newText }),
                    headers: {
                        'Authorization': 'Bearer @Context.Session.GetString("jwt")'
                    },
                    success: function() {
                        commentText.text(newText);
                        
                        editTextarea.hide();
                        commentText.show();
                        commentContainer.find('.edit-comment, .delete-comment').show();
                        commentContainer.find('.save-comment, .cancel-edit').hide();
                    },
                    error: function(xhr) {
                        if (xhr.status === 401) {
                            alert('Bu yorumu düzenleme yetkiniz yok.');
                        } else if (xhr.status === 404) {
                            alert('Yorum bulunamadı. Silinmiş olabilir.');
                            commentContainer.fadeOut(400, function() {
                                $(this).remove();
                            });
                        } else {
                            alert('Yorum düzenlenemedi. Lütfen tekrar deneyin.');
                        }
                    }
                });
            });
        });
    </script>
} 