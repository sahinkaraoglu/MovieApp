@using MovieApp.Infrastructure.Models.MovieDb.TvSeriesDetail
@model MovieDetailResponseModel;




<div class="container mt-5">
    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Orjinal Adı: @Model.data.original_name </h5>
                    <h5 class="card-title">@Model.data.original_name </h5>
                    <div class="w-100 mt-3"></div>
                    <p class="card-text"><img src="@(string.Concat("https://image.tmdb.org/t/p/original", Model.data.backdrop_path))" class="img-fluid" alt="@Model.data.original_name" style="max-width: 300px; height: auto;" /></p>

                    <p class="card-text">Bölüm Sayısı: @Model.data.number_of_episodes</p>
                    <p class="card-text">Sezon Sayısı: @Model.data.number_of_seasons</p>
                    <p class="card-text">
                        Orjinal Dil:  @string.Join(", ", @Model.data.spoken_languages.Select(g => g.name))
                    </p>
                    <p class="card-text">Genel Bakış: @Model.data.overview</p>
                    <p class="card-text">Tarz: @Model.data.type</p>

                    <p class="card-text">
                        Tür: @string.Join(", ", Model.data.genres.Select(g => g.name))
                    </p>
                    <p class="card-text">
                        Platform: @string.Join(", ", @Model.data.networks.Select(g => g.name))
                    </p>
                    <p class="card-text">
                        Ülke: @string.Join(", ", @Model.data.origin_country)
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Poster </h5>
                    <p class="card-text"><img src="@(string.Concat("https://image.tmdb.org/t/p/original", Model.data.poster_path))" class="img-fluid" alt="@Model.data.original_name" style="max-width: 300px; height: auto;" /></p>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        @foreach (var item in Model.comments)
        {
            <div class="col-12 mt-3 d-flex justify-content-between align-items-center">
                <div>
                    <h1 style="font-size: 20px">@item.User.UserName</h1>
                    <h3 style="font-size: 20px">@item.Text</h3>
                </div>
                @if (Context.Session.GetString("jwt") != null && item.User.UserName == Context.Session.GetString("name"))
                {
                    <button class="btn btn-danger delete-comment" data-comment-id="@item.Id">
                        <i class="fas fa-trash"></i> Delete
                    </button>
                }
            </div>
        }
    </div>
    <div class="row">
        <div class="col-12">
            <form id="comment-form">
                <div class="mb-3">
                    <label for="commentArea" class="form-label">Yorumunuz</label>
                    <textarea class="form-control" id="commentArea" rows="3"></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Yorum Yap</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#comment-form").on('submit', function (e) {
                e.preventDefault();

                var commentData = {
                    comment: $("#commentArea").val(),
                }

                $.ajax({
                    url: '/movie/@Model.data.id/comment',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(commentData),
                    success: function (response) {
                        window.location.reload()
                    },
                    error: function (xhr) {
                        console.log("error");
                    }
                });

            });
        });
    </script>
    <script>
        $(document).ready(function() {
            $('.delete-comment').click(function() {
                const commentId = $(this).data('comment-id');
                const button = $(this);

                if (confirm('Bu yorumu silmek istediğinize emin misiniz?')) {
                    $.ajax({
                        url: `/movie/@Model.data.id/comment/${commentId}`,
                        type: 'DELETE',
                        headers: {
                            'Authorization': 'Bearer @Context.Session.GetString("jwt")'
                        },
                        success: function() {
                            button.closest('.col-12').fadeOut(400, function() {
                                $(this).remove();
                            });
                        },
                        error: function(xhr) {
                            if (xhr.status === 401) {
                                alert('Bu yorumu silme yetkiniz yok.');
                            } else if (xhr.status === 404) {
                                alert('Yorum bulunamadı. Silinmiş olabilir.');
                                button.closest('.col-12').fadeOut(400, function() {
                                    $(this).remove();
                                });
                            } else {
                                alert('Yorum silinemedi. Lütfen tekrar deneyin.');
                            }
                        }
                    });
                }
            });
        });
    </script>
}